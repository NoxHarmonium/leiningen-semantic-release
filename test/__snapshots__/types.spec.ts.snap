// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when parsing config when the config is invalid parse { pkgRoot: './README.md' } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "pkgRoot": "./README.md",
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": "./README.md",
        "key": "pkgRoot",
        "type": Type {
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "DirectoryPath",
          "validate": [Function],
        },
      },
    ],
    "message": "not a path to a valid directory",
    "value": "./README.md",
  },
]
`;

exports[`when parsing config when the config is invalid parse { pkgRoot: '/tmp/ishouldntexist' } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "pkgRoot": "/tmp/ishouldntexist",
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": "/tmp/ishouldntexist",
        "key": "pkgRoot",
        "type": Type {
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "DirectoryPath",
          "validate": [Function],
        },
      },
    ],
    "message": "Erro ENOEN no such file or directory, lstat '/tmp/ishouldntexist'",
    "value": "/tmp/ishouldntexist",
  },
]
`;

exports[`when parsing config when the config is invalid parse { pkgRoot: 444 } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "pkgRoot": 444,
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": 444,
        "key": "pkgRoot",
        "type": Type {
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "DirectoryPath",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": 444,
  },
]
`;

exports[`when parsing config when the config is invalid parse { pkgRoot: false } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "pkgRoot": false,
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": false,
        "key": "pkgRoot",
        "type": Type {
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "DirectoryPath",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": false,
  },
]
`;

exports[`when parsing config when the config is invalid parse { pkgRoot: null } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "pkgRoot": null,
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": null,
        "key": "pkgRoot",
        "type": Type {
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "DirectoryPath",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": null,
  },
]
`;

exports[`when parsing config when the config is invalid parse { skipDeploy: 'false' } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "skipDeploy": "false",
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": "false",
        "key": "skipDeploy",
        "type": BooleanType {
          "_tag": "BooleanType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "boolean",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": "false",
  },
]
`;

exports[`when parsing config when the config is invalid parse { skipDeploy: 5656 } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "skipDeploy": 5656,
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": 5656,
        "key": "skipDeploy",
        "type": BooleanType {
          "_tag": "BooleanType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "boolean",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": 5656,
  },
]
`;

exports[`when parsing config when the config is invalid parse { skipDeploy: null } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "skipDeploy": null,
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": null,
        "key": "skipDeploy",
        "type": BooleanType {
          "_tag": "BooleanType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "boolean",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": null,
  },
]
`;

exports[`when parsing config when the config is invalid parse { uberJar: 'true' } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "uberJar": "true",
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": "true",
        "key": "uberJar",
        "type": BooleanType {
          "_tag": "BooleanType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "boolean",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": "true",
  },
]
`;

exports[`when parsing config when the config is invalid parse { uberJar: 5656 } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "uberJar": 5656,
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": 5656,
        "key": "uberJar",
        "type": BooleanType {
          "_tag": "BooleanType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "boolean",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": 5656,
  },
]
`;

exports[`when parsing config when the config is invalid parse { uberJar: null } 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": Object {
          "uberJar": null,
        },
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
      Object {
        "actual": null,
        "key": "uberJar",
        "type": BooleanType {
          "_tag": "BooleanType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "boolean",
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": null,
  },
]
`;

exports[`when parsing config when the config is invalid parse null 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": null,
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": null,
  },
]
`;

exports[`when parsing config when the config is invalid parse undefined 1`] = `
Array [
  Object {
    "context": Array [
      Object {
        "actual": undefined,
        "key": "",
        "type": PartialType {
          "_tag": "PartialType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "Partial<{ skipDeploy: boolean, pkgRoot: DirectoryPath, uberJar: boolean }>",
          "props": Object {
            "pkgRoot": Type {
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "DirectoryPath",
              "validate": [Function],
            },
            "skipDeploy": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
            "uberJar": BooleanType {
              "_tag": "BooleanType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "boolean",
              "validate": [Function],
            },
          },
          "validate": [Function],
        },
      },
    ],
    "message": undefined,
    "value": undefined,
  },
]
`;

exports[`when parsing config when the config is valid parse { pkgRoot: '.' } 1`] = `
Object {
  "pkgRoot": ".",
}
`;

exports[`when parsing config when the config is valid parse { pkgRoot: './src' } 1`] = `
Object {
  "pkgRoot": "./src",
}
`;

exports[`when parsing config when the config is valid parse { skipDeploy: false } 1`] = `
Object {
  "skipDeploy": false,
}
`;

exports[`when parsing config when the config is valid parse { skipDeploy: true } 1`] = `
Object {
  "skipDeploy": true,
}
`;

exports[`when parsing config when the config is valid parse { skipDeploy: true, uberJar: false, pkgRoot: './src' } 1`] = `
Object {
  "pkgRoot": "./src",
  "skipDeploy": true,
  "uberJar": false,
}
`;

exports[`when parsing config when the config is valid parse { uberJar: false } 1`] = `
Object {
  "uberJar": false,
}
`;

exports[`when parsing config when the config is valid parse { uberJar: true } 1`] = `
Object {
  "uberJar": true,
}
`;

exports[`when parsing config when the config is valid parse {} 1`] = `Object {}`;
